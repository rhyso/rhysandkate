{"ast":null,"code":"var _jsxFileName = \"/Users/ciaranthomas/code/myweddingpublic/mywedding/src/sections/rsvp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(5, 4, 3)\n  }\n}));\n\nconst RSVP = () => {\n  _s();\n\n  const [names, setNames] = useState(\"\");\n  const [nameError, setNameError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [attend, setAttend] = useState(\"\");\n  const [attendError, setAttendError] = useState(\"\");\n  const [food, setFood] = useState(\"\");\n  const [foodError, setFoodError] = useState(\"\");\n  const [submitted, hasSubmit] = useState(false);\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    hasSubmit(true);\n  };\n\n  function getModalStyle() {\n    const top = 50 + Math.round(Math.random() * 20) - 10;\n    const left = 50 + Math.round(Math.random() * 20) - 10;\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`\n    };\n  }\n\n  const validateForm = (e, name) => {\n    console.log(names);\n    let submission = [];\n\n    if (!names || names.length < 5) {\n      setNameError('Full name/names please!');\n      hasSubmit(false);\n    } else {\n      submission = {\n        names,\n        email,\n        attend,\n        food\n      };\n      console.log(submission);\n      handleOpen(hasSubmit(true));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"story story-2 info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"RSVP\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"wufoo-m1tru6as04jg1ii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \" Fill out my \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://kateandrhys.wufoo.com/forms/m1tru6as04jg1ii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 74\n    }\n  }, \"online form\"), \". \"))))));\n};\n\n_s(RSVP, \"h53f4F+0x0mCtNlKudWlKLsTreo=\", false, function () {\n  return [useStyles];\n});\n\n_c = RSVP;\nexport default RSVP;\n/*\n      <div className={'rsvpForm'}>\n                                    <div class=\"form-group\">\n                                        <div className=\"left-panel\">\n                                            <label for=\"name\">Name</label>\n                                            <i class=\"material-icons\">accessibility</i>\n                                            { nameError && <label for=\"name\">{nameError}</label>}\n                                        </div>\n                                        <div className=\"right-panel\">\n                                            <input type=\"text\"  placeholder=\"Names\" onChange={e => setNames(e.target.value )}onBlur={e => setNameError(\"\")} />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div className=\"left-panel\">\n                                            <i class=\"material-icons\">mail</i>\n                                            <label for=\"name\">Email</label>\n                                            { nameError && <label for=\"name\">{emailError}</label>}\n                                        </div>\n                                        <div className=\"right-panel\">\n                                            <input type=\"text\"  placeholder=\"Email\" \n                                            onChange={e => setEmail(e.target.value )}\n                                            onBlur={e => setEmailError(\"\")} />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                    <div className=\"left-panel\">\n                                        <i class=\"material-icons\">done</i>\n                                            <label for=\"name\">Done</label>\n                                            { attend && <label for=\"name\">{attendError}</label>}\n                                        </div>\n                                        <select name=\"cars\"\n                                        onChange={e => setAttend(e.target.value )}\n                                        onBlur={e => setAttendError(\"\")}>\n                                            <option value=\"yes\">Yes</option>\n                                            <option value=\"no\">No</option>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <i class=\"material-icons\">restaurant</i>\n                                        <label for=\"name\">restaurant</label>\n                                        { foodError && <label for=\"name\">{foodError}</label>}\n                                        <input type=\"text\"  placeholder=\"Food reqs\" \n                                        onChange={e => setFood(e.target.value )}\n                                        onBlur={e => setFoodError(\"\")} />\n                                    </div>\n\n\n\n                                    <button disabled={submitted} onClick={() => validateForm()}>\n                                        Submit\n                                    </button>\n                        </div>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <div style={modalStyle} className={classes.paper}>\n                            <h3 id=\"simple-modal-title\">Thank you</h3><br/>\n                            <p id=\"simple-modal-description\">\n                                Cant wait to get married and celebrate with you!!!\n                            </p>\n                            </div>\n                        </Modal>\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"RSVP\");","map":{"version":3,"sources":["/Users/ciaranthomas/code/myweddingpublic/mywedding/src/sections/rsvp.jsx"],"names":["React","Fragment","useState","makeStyles","Modal","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","RSVP","names","setNames","nameError","setNameError","email","setEmail","emailError","setEmailError","attend","setAttend","attendError","setAttendError","food","setFood","foodError","setFoodError","submitted","hasSubmit","classes","modalStyle","getModalStyle","open","setOpen","handleOpen","handleClose","top","Math","round","random","left","transform","validateForm","e","name","console","log","submission","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(5, 4, 3),\n    },\n  }));\n\nconst RSVP = () => {\n\n    const [names, setNames ] = useState(\"\");\n    const [nameError, setNameError ] = useState(\"\");\n\n\n    const [email, setEmail ] = useState(\"\");\n    const [emailError, setEmailError ] = useState(\"\");\n\n    const [attend, setAttend ] = useState(\"\");\n    const [attendError, setAttendError ] = useState(\"\");\n\n    const [food, setFood ] = useState(\"\");\n    const [foodError, setFoodError ] = useState(\"\");\n\n    const [submitted, hasSubmit ] = useState(false);\n\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n      hasSubmit(true)\n    };\n\n    function getModalStyle() {\n        const top = 50 + Math.round(Math.random() * 20) - 10;\n\n        const left = 50 + Math.round(Math.random() * 20) - 10;\n\n        return {\n          top: `${top}%`,\n          left: `${left}%`,\n          transform: `translate(-${top}%, -${left}%)`,\n        };\n      }\n\n    const validateForm = (e,name) => {\n        console.log(names)\n        let submission = []\n        if(!names || names.length<5){\n            setNameError('Full name/names please!')\n            hasSubmit(false)\n        }\n        else{\n            submission = ({\n                names,\n                email ,\n                attend ,\n                food ,\n            })\n            console.log(submission)\n            handleOpen(\n                hasSubmit(true)\n            )\n        }\n    }\n\n        return (\n        <Fragment>\n\n            <section className=\"story story-2 info\">\n                <div className=\"container\">\n\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2 text-center\">\n                            <h2>RSVP</h2>\n                       \n                            <div id=\"wufoo-m1tru6as04jg1ii\"> Fill out my <a href=\"https://kateandrhys.wufoo.com/forms/m1tru6as04jg1ii\">online form</a>. </div> \n                    </div>\n                    </div>\n                </div>\n            </section>\n\n        </Fragment>\n\n        )\n    }\n\nexport default RSVP\n\n/*\n      <div className={'rsvpForm'}>\n                                    <div class=\"form-group\">\n                                        <div className=\"left-panel\">\n                                            <label for=\"name\">Name</label>\n                                            <i class=\"material-icons\">accessibility</i>\n                                            { nameError && <label for=\"name\">{nameError}</label>}\n                                        </div>\n                                        <div className=\"right-panel\">\n                                            <input type=\"text\"  placeholder=\"Names\" onChange={e => setNames(e.target.value )}onBlur={e => setNameError(\"\")} />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div className=\"left-panel\">\n                                            <i class=\"material-icons\">mail</i>\n                                            <label for=\"name\">Email</label>\n                                            { nameError && <label for=\"name\">{emailError}</label>}\n                                        </div>\n                                        <div className=\"right-panel\">\n                                            <input type=\"text\"  placeholder=\"Email\" \n                                            onChange={e => setEmail(e.target.value )}\n                                            onBlur={e => setEmailError(\"\")} />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                    <div className=\"left-panel\">\n                                        <i class=\"material-icons\">done</i>\n                                            <label for=\"name\">Done</label>\n                                            { attend && <label for=\"name\">{attendError}</label>}\n                                        </div>\n                                        <select name=\"cars\"\n                                        onChange={e => setAttend(e.target.value )}\n                                        onBlur={e => setAttendError(\"\")}>\n                                            <option value=\"yes\">Yes</option>\n                                            <option value=\"no\">No</option>\n                                        </select>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <i class=\"material-icons\">restaurant</i>\n                                        <label for=\"name\">restaurant</label>\n                                        { foodError && <label for=\"name\">{foodError}</label>}\n                                        <input type=\"text\"  placeholder=\"Food reqs\" \n                                        onChange={e => setFood(e.target.value )}\n                                        onBlur={e => setFoodError(\"\")} />\n                                    </div>\n\n\n\n                                    <button disabled={submitted} onClick={() => validateForm()}>\n                                        Submit\n                                    </button>\n                        </div>\n                        <Modal\n                            aria-labelledby=\"simple-modal-title\"\n                            aria-describedby=\"simple-modal-description\"\n                            open={open}\n                            onClose={handleClose}\n                        >\n                            <div style={modalStyle} className={classes.paper}>\n                            <h3 id=\"simple-modal-title\">Thank you</h3><br/>\n                            <p id=\"simple-modal-description\">\n                                Cant wait to get married and celebrate with you!!!\n                            </p>\n                            </div>\n                        </Modal>\n\n*/"]},"metadata":{},"sourceType":"module"}